name: Noon Update

on:
  schedule:
    # says run at the 16th hr UTC (noon ET) of every day
    - cron: '05 16 * * *'
  #push:
    #branches:
      #- main
      #- master

jobs:
  update:
    name: Update IN COVID Tracker
    #runs-on: [ubuntu-latest]
    runs-on: ubuntu-18.04


    env:
      APPNAME: ${{ secrets.APPNAME }}
      APIKEY: ${{ secrets.APIKEY }}
      APISECRET: ${{ secrets.APISECRET }}
      ACCESSTOKEN: ${{ secrets.ACCESSTOKEN }}
      ACCESSSECRET: ${{ secrets.ACCESSSECRET }}
      APPNAMEE: ${{ secrets.APPNAMEE }}
      APIKEYE: ${{ secrets.APIKEYE }}
      APISECRETE: ${{ secrets.APISECRETE }}
      ACCESSTOKENE: ${{ secrets.ACCESSTOKENE }}
      ACCESSSECRETE: ${{ secrets.ACCESSSECRETE }}
      APPNAMEF: ${{ secrets.APPNAMEF }}
      APIKEYF: ${{ secrets.APIKEYF }}
      APISECRETF: ${{ secrets.APISECRETF }}
      ACCESSTOKENF: ${{ secrets.ACCESSTOKENF }}
      ACCESSSECRETF: ${{ secrets.ACCESSSECRETF }}
      CRAN_REPO: https://packagemanager.rstudio.com/all/__linux__/bionic/latest
      RENV_PATHS_ROOT: ~/.local/share/renv


    steps:
      
      ## Set-up
      # must checkout out of own repo to use "action" in someone elses  
      - uses: actions/checkout@v2
      # installs r
      - uses: r-lib/actions/setup-r@v1
        with:
          r-version: '4.0.3'
      # need libcurl to install RCurl pkg on Linux
      - name: Install libcurl
        run: sudo apt-get install libcurl4-openssl-dev
      # need these for rgdal package
      - name: Install gdal, proj, and geos
        run: sudo apt-get install libgdal-dev gdal-bin libproj-dev proj-data proj-bin libgeos-dev
      # needed for units package
      - name: Install udunits2
        run: sudo apt-get install libudunits2-dev
      # installs pandoc for rmarkdown
      - uses: r-lib/actions/setup-pandoc@v1
      # fa has linux deps that need installed
      - name: Install font awesome with deps
        run: sudo apt-get install -y fonts-font-awesome
      # cache dev environment, restore environment from cache
      - name: Cache packages
        uses: actions/cache@v2
        with:
          path: ${{ env.RENV_PATHS_ROOT }}
          key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
          restore-keys: |
            ${{ runner.os }}-renv-
      - name: Restore packages
        shell: Rscript {0}
        run: |
          cran_repo <- c("CRAN" = Sys.getenv("CRAN_REPO"))
          if (!requireNamespace("renv", quietly = TRUE)) install.packages("renv", repos = cran_repo)
          renv::restore(repos = cran_repo)
      - name: install fonts
        run: Rscript -e 'library(extrafont); font_import(paths = glue::glue("{rprojroot::find_rstudio_root_file()}/font"), prompt=FALSE); loadfonts()'
      
      ## Run Scripts
      #- name: run detect data update
        #run: Rscript "R/misc/detect-data-update.R"
      - name: build beds and ventilator data set
        if: ${{ always() }}
        run: Rscript "R/collection/build-datasets.R"
      - name: run excess-death-col
        if: ${{ always() }}
        run: Rscript "R/static-charts/excess-death-col.R"
      - name: run opentab-rest-line
        if: ${{ always() }}
        run: Rscript "R/static-charts/opentab-rest-line.R"
      - name: run hosp-icu-vent
        if: ${{ always() }}
        run: Rscript "R/static-charts/hosp-icu-vent.R"
      - name: run daily-pos-rate
        if: ${{ always() }}
        run: Rscript "R/static-charts/daily-pos-rate.R"
      - name: run ind-covid-line
        if: ${{ always() }}
        run: Rscript "R/static-charts/ind-covid-line.R"
      - name: run pos-policy-line
        if: ${{ always() }}
        run: Rscript "R/static-charts/pos-policy-line.R"
      - name: run county-slope-models
        if: ${{ always() }}
        run: Rscript "R/static-charts/county-slope-models.R"
      - name: run goog-mob-line
        if: ${{ always() }}
        run: Rscript "R/static-charts/goog-mob-line.R"
      - name: run regional-slope-models
        if: ${{ always() }}
        run: Rscript "R/static-charts/regional-slope-models.R"
      - name: run daily-re-estimate
        if: ${{ always() }}
        run: Rscript "R/static-charts/daily-est-re.R"
      - name: process demographics data
        if: ${{ always() }}
        run: Rscript "R/process/process-demog-data.R"
      - name: process hospitals data
        if: ${{ always() }}
        run: Rscript "R/process/process-hospitals-data.R"
      - name: clean-up old plots
        if: ${{ always() }}
        run: Rscript "R/misc/gc.R"
      #- name: render readme
        #if: ${{ success() || always() }}
        #run: Rscript "R/misc/render-readme.R"
        
      ## Commit, Push, and Trigger the website repo  
      - name: Commit files
        if: ${{ always() }}
        run: |
          git config --local user.email "action@github.com"
          git config --local user.name "GitHub Action"
          git add .
          git commit -m "Noon charts update" || echo "No changes to commit"
          git pull --rebase
          git push

      # Send signal to website repo to start its noon update
      - name: Repository Dispatch
        if: ${{ always() }}
        uses: peter-evans/repository-dispatch@v1
        # requires token with repo scope
        with:
          token: ${{ secrets.REPO_ACCESS_TOKEN }}
          repository: ercbk/Indiana-COVID-19-Website
          event-type: noon-update
